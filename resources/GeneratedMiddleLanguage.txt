"TODO_name"
css="http://bootswatch.com/lumen/bootstrap.min.css"
"City" {
  foreignKey "enterprise" ( to = "Enterprise" )

  char "name" ( max_length = 30,  null = false )
  char "zipCode" ( max_length = 12,  null = false )
  foreignKey "department" ( to = "Department" )
  foreignKey "vendor" ( to = "Vendor" )
  foreignKey "order" ( to = "Order" )
  foreignKey "customer" ( to = "Customer" )
}

"Enterprise" {
  char "name" ( max_length = 50,  null = false )
  char "address" ( max_length = 150,  null = false )
  foreignKey "department" ( to = "Department" )

}

"State" {
  foreignKey "city" ( to = "City" )
  char "name" ( max_length = 25,  null = false )
}

"Department" {
  char "departmentName" ( max_length = 20,  editable = true,  null = false )
  char "address" ( max_length = 155,  null = false )

  foreignKey "stock" ( to = "Stock" )

}

"Vendor" {
  foreignKey "product" ( to = "Product" )
  char "name" ( max_length = 30,  null = false )
  char "address" ( max_length = 150,  null = false )

}

"OrderItem" {


  decimal "orderedQuantity" ( editable = true,  decimal_places = 2,  null = false,  max_digits = 15 )
  decimal "available" ( editable = true,  decimal_places = 2,  null = true,  max_digits = 15 )
  decimal "unitPrice" ( editable = true,  decimal_places = 2,  null = false,  max_digits = 15 )
  decimal "unitTax" ( editable = true,  decimal_places = 2,  null = false,  max_digits = 15 )
  decimal "value" ( editable = true,  decimal_places = 2,  null = false,  max_digits = 10 )
}

"Order" {
  foreignKey "orderItem" ( to = "OrderItem" )
  foreignKey "payment" ( to = "Payment" )
  foreignKey "invoice" ( to = "Invoice" )
  int "orderNumber" ( null = false )
  dateTime "orderDate" ( null = false )
  text "shipmentAddress" ( max_length = 200,  null = false )
  int "orderTotal" ( null = false )
  char "orderStatus" ( max_length = 30,  null = false,  choices = (("ORDERING","ordering"),("FINISHED","finished"),("CANCELED","canceled"),("SHIPPED","shipped")) )


}

"PriceListItem" {


  decimal "price" ( decimal_places = 2,  null = false,  max_digits = 10 )
  decimal "tax" ( decimal_places = 2,  null = false,  max_digits = 10 )
}

"Payment" {

  char "paymetMethod" ( max_length = 50,  choices = (("CASH","cash"),("CREDITCARD","creditCard"),("PAYPAL","payPal")) )
  dateTime "dateReceived" ( null = false )
  decimal "amountReceived" ( max_length = 9,  editable = false,  null = false )
  boolean "canceled" ( null = false )
}

"Invoice" {

  int "invoiceNumber" ( null = false )
  dateTime "invoiceDate" ( )
  text "invoiceTotal" ( max_length = 300,  null = true )
  boolean "canceled" ( )
}

"Customer" {
  char "name" ( max_length = 31,  null = false )
  char "address" ( max_length = 51,  null = false )
  foreignKey "order" ( to = "Order" )

}

"PriceList" {
  foreignKey "priceListItem" ( to = "PriceListItem" )
  int "listNumber" ( null = false )
  dateTime "activeFromDate" ( null = false )
}

"Stock" {

  foreignKey "stockKeepingUnit" ( to = "StockKeepingUnit" )
  char "stockName" ( max_length = 20,  null = false )
  text "desription" ( max_length = 255,  null = true )
}

"Product" {


  foreignKey "priceListItem" ( to = "PriceListItem" )

  foreignKey "orderItem" ( to = "OrderItem" )
  char "productName" ( max_length = 25,  null = false )
  text "description" ( max_length = 255,  null = true )
}

"Category" {
  foreignKey "product" ( to = "Product" )
  foreignKey "category" ( to = "Category" )

  char "categoryName" ( max_length = 25,  null = false )
  text "description" ( max_length = 200,  null = true )
}

"StockKeepingUnit" {

  foreignKey "product" ( to = "Product" )
  decimal "available" ( decimal_places = 2,  null = false,  max_digits = 10 )
  decimal "reserved" ( decimal_places = 2,  null = false,  max_digits = 10 )
}

